Build1=Default,my.b4a.todo
File1=ListItem.bal
File2=Main.bal
FileGroup1=Default Group
FileGroup2=Default Group
Group=Default Group
Library1=core
Library2=xui
Library3=xcustomlistview
Library4=ime
Library5=keyvaluestore2
Library6=xui views
Library7=appcompat
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="28"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~'CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~~\n~SetApplicationAttribute(android:theme, "@style/Todo")~\n~CreateResource(values, colors.xml,~\n~<resources>~\n~	<color name="actionbar">#FF8A2BE2</color>~\n~   	<color name="statusbar">#FF8A2BE2</color>~\n~   	<color name="navigationBar">#FF006DB3</color>	~\n~   	<color name="textColorPrimary">#FF000000</color>	~\n~   	<color name="colorAccent">#FFE91E63</color>	~\n~</resources>~\n~)~\n~~\n~~\n~CreateResource(values, theme.xml,~\n~<resources>~\n~	<style name="Todo" parent="Theme.AppCompat.Light">~\n~		<item name="colorPrimary">@color/actionbar</item>~\n~        <item name="colorPrimaryDark">@color/statusbar</item>~\n~		<item name="android:navigationBarColor">@color/navigationBar</item>		~\n~       	<item name="android:textColorPrimary">@color/textColorPrimary</item>		~\n~       	<item name="colorAccent">@color/colorAccent</item>~\n~       	<item name="windowNoTitle">true</item>~\n~       	<item name="windowActionBar">false</item>~\n~       	<item name="windowActionModeOverlay">true</item>~\n~    </style>~\n~</resources>~\n~)
Module1=Starter
NumberOfFiles=2
NumberOfLibraries=7
NumberOfModules=1
Version=9.8
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: B4ATodo
	#VersionCode: 1
	#VersionName: Education
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes
	#FullScreen: False
	#IncludeTitle: False
	#Extends: android.support.v7.app.AppCompatActivity
#End Region

Sub Process_Globals

End Sub

Sub Globals
	Private IME As IME
	Private XUI As XUI
	Private CLV As CustomListView
	Private PnlItem As Panel
	Private PnlEdit As Panel
	Private BtnAdd As Button	
	Private LblCount As Label
	Private LblTitleDialog As Label
	Private LblDelete As Label
	Private LblNo As Label
	Private LblYes As Label
	Private LblCheck As Label
	Private LblText As Label
	Private TxtTodo As EditText
	Dim ID As Int	
	Dim const WHITE As Int = Colors.White
	Dim const LIGHTGRAY As Int = 0xFFF0F0F0
	'Dim const LIMEGREEN As Int = 0xFFADFF2F
	Dim ID As Int
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("Main")
	
	Wait For (Starter.kvs.GetMapAsync(Array("MapData"))) Complete (MapData As Map)
	'Log(MapData)
	If MapData.IsInitialized Then
		Dim ListTodo As List = MapData.Get("MapData")
		If ListTodo.IsInitialized Then
			For Each MapTodo As Map In ListTodo
				CLV.Add(CreateListItem(MapTodo.Get("txt"), MapTodo.Get("chk"), CLV.AsView.Width, 70dip), MapTodo.Get("id"))
			Next
		End If
	End If
	
	IME.Initialize("")
	ID = CLV.Size
	LblCount.Text = "Items: " & CLV.Size
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Sub SaveTodo As ResumableSub
	'Starter.kvs.Remove("MapData")
	Dim ListTodo As List
	ListTodo.Initialize

	For i = 0 To CLV.Size - 1
		Dim pnl As B4XView = CLV.GetPanel(i)
		Dim pan As B4XView = pnl.GetView(0)		' PnlItem
		Dim chk As B4XView = pan.GetView(0)		' PnlCheck
		Dim lbl As B4XView = chk.GetView(0)		' LblCheck
		Dim txt As B4XView = pan.GetView(1)		' LblText

		Dim MapTodo As Map = CreateMap("id": i, "chk": lbl.Visible, "txt": txt.Text)
		ListTodo.Add(MapTodo)
	Next
	'Log(ListTodo)
	Dim MapData As Map = CreateMap("MapData":ListTodo)
	Wait For (Starter.kvs.PutMapAsync(MapData)) Complete (Success As Boolean)
	Return Success
End Sub

Sub CreateListItem(Text As String, Checked As Boolean, Width As Int, Height As Int) As B4XView
	Dim p As B4XView = XUI.CreatePanel("")
	p.SetLayoutAnimated(0, 0, 0, Width, Height)
	p.LoadLayout("ListItem")
		
	LblCheck.Visible = Checked
	If Checked Then
		Dim cs As CSBuilder
		cs.Initialize
		cs.Strikethrough.Append(Text).PopAll
		LblText.Text = cs
		PnlItem.Color = LIGHTGRAY
		'LblCheck.Color = LIMEGREEN
	Else
		LblText.Text =  Text
		PnlItem.Color = WHITE
		'LblCheck.Color = WHITE
	End If
	Return p
End Sub

'Sub CLV_ItemClick (Index As Int, Value As Object)
'	
'End Sub

Sub BtnAdd_Click
	LblTitleDialog.Text = "N E W   I T E M"
	TxtTodo.Text = ""
	TxtTodo.RequestFocus
	LblDelete.Visible = False
	PnlEdit.Visible = True
	BtnAdd.Visible = False
End Sub

Sub PnlCheck_Click
	Dim index As Int = CLV.GetItemFromView(Sender)
	ID = index
	Dim pnl As B4XView = CLV.GetPanel(ID) ' ListItem
	Dim pan As B4XView = pnl.GetView(0)		' PnlItem
	Dim chk As B4XView = pan.GetView(0)		' PnlCheck
	Dim lbl As B4XView = chk.GetView(0)		' LblCheck
	Dim txt As B4XView = pan.GetView(1)		' LblText
	
	Dim cs As CSBuilder
	cs.Initialize
	
	lbl.Visible = Not(lbl.Visible)
	If lbl.Visible Then			
		pan.Color = LIGHTGRAY
		chk.Color = LIGHTGRAY
		'lbl.Color = LIMEGREEN
		cs.Strikethrough.Append(txt.Text).PopAll
	Else
		pan.Color = WHITE
		chk.Color = WHITE
		'lbl.Color = WHITE
		cs.Append(txt.Text).PopAll
	End If
	txt.Text = cs
	ID = index
	Wait For (SaveTodo) Complete (Success As Boolean)	
	If Success = False Then
		ToastMessageShow("Error: Saving data", False)
	End If
End Sub

Sub LblEdit_Click
	Dim index As Int = CLV.GetItemFromView(Sender)
	Dim pnl As B4XView = CLV.GetPanel(index) ' ListItem
	Dim pan As B4XView = pnl.GetView(0)		' PnlItem
	Dim lbl As B4XView = pan.GetView(1)		' LblText
	
	LblTitleDialog.Text = "E D I T   I T E M"
	TxtTodo.Text = lbl.Text
	LblDelete.Visible = True
	PnlEdit.Visible = True
	BtnAdd.Visible = False
	TxtTodo.RequestFocus
	TxtTodo.SelectionStart = TxtTodo.Text.Length
	ID = index
End Sub

Sub LblDelete_Click
	'XUI.MsgboxAsync("ID: " & ID, "DELETE")
	If ID <> CLV.Size Then
		CLV.RemoveAt(ID)
	End If
	Wait For (SaveTodo) Complete (Success As Boolean)
	If Success Then
		IME.HideKeyboard
		PnlEdit.Visible = False
		BtnAdd.Visible = True		
		LblCount.Text = "Items: " & CLV.Size
	Else
		ToastMessageShow("Error: Saving data", False)
	End If
End Sub

Sub LblYes_Click
	Dim str As String
	If LblTitleDialog.Text = "E D I T   I T E M" Then
		Dim pnl As B4XView = CLV.GetPanel(ID)	' ListItem
		Dim pan As B4XView = pnl.GetView(0)		' PnlItem	
		Dim chk As B4XView = pan.GetView(0)		' PnlCheck
		Dim lbl As B4XView = chk.GetView(0)		' LblCheck
		Dim txt As B4XView = pan.GetView(1)		' LblText
				
		Dim cs As CSBuilder
		cs.Initialize

		If TxtTodo.Text.Trim = "" Then
			str = $"Item #${ID + 1}"$
		Else
			str = TxtTodo.Text.Trim
		End If
		If lbl.Visible Then
			cs.Strikethrough.Append(str).PopAll
		Else
			cs.Append(str).PopAll
		End If
		txt.Text = cs
	Else
		ID = CLV.Size
		If TxtTodo.Text.Trim = "" Then
			str = $"Item #${ID + 1}"$
		Else
			str = TxtTodo.Text.Trim
		End If
		CLV.Add(CreateListItem(str, False, CLV.AsView.Width, 70dip), ID)
	End If
	Wait For (SaveTodo) Complete (Success As Boolean)
	If Success Then
		IME.HideKeyboard
		PnlEdit.Visible = False
		BtnAdd.Visible = True		
		'XUI.MsgboxAsync("ID: " & ID, "SAVE")
		LblCount.Text = "Items: " & CLV.Size
	Else
		ToastMessageShow("Error: Saving data", False)
	End If	
End Sub

Sub LblNo_Click
	IME.HideKeyboard
	PnlEdit.Visible = False
	BtnAdd.Visible = True	
End Sub

Sub NoScroll_Click

End Sub
